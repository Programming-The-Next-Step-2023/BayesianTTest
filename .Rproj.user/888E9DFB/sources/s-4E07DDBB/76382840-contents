library(shiny)
library(DT)
library(BayesFactor)

# Define server ----
server <- function(input, output) {

  # Read Input File ----
  output$contents <- renderTable({

    inFile <- input$file

    if (is.null(inFile))
      return(NULL)

    ext <- tools::file_ext(inFile$datapath)
    req(inFile)
    validate(need(ext == "csv", "Please upload a csv file"))

    read.csv(inFile$datapath, header = input$header)

  })


  # Bayes Factor and Prior Scale Text ----
  output$BFText <- renderText({

    inFile <- input$file

    if (is.null(inFile))
      return(NULL)

    df <- read.csv(inFile$datapath, header = input$header)

    x = df$extra[sleep$group==1]
    y = df$extra[sleep$group==2]
    nullInterval = NULL #placeholder
    paired = if(input$type == 2) {TRUE} else {FALSE}
    rscale = input$user_r

    result <- ttestBF(x = x,
                      y = y,
                      nullInterval = nullInterval,
                      paired = paired,
                      rscale = rscale)

    paste0("Bayes Factor is ", round(extractBF(result)[[1]], 3),
          " with prior a Cauchy prior scale of ", rscale, ".")

  })

  # Prior and Posterior Plot ----
  output$posteriorPlot <- renderPlot({

    nullInterval = NULL #placeholder
    paired = if(input$type == 2) {TRUE} else {FALSE}
    rscale = input$user_r

    samples <- ttestBF(x = sleep$extra[sleep$group==1],
                      y = sleep$extra[sleep$group==2],
                      nullInterval = nullInterval,
                      paired = paired,
                      rscale = rscale,
                      posterior = TRUE,
                      iterations = 1000)

    plot(samples[,"mu"], trace = FALSE, main = "")

  })

}
